INFO  13:59:49,473 - Compiling source file: C:\Users\Lazar\Desktop\PP1_projekat\workspace\MJCompiler\test\program.mj
INFO  13:59:49,531 - #2 program
INFO  13:59:49,531 - #51 Program
INFO  13:59:49,531 - #4 class
INFO  13:59:49,532 - #51 A
INFO  13:59:49,532 - #46 {
INFO  13:59:49,533 - #51 int
INFO  13:59:49,534 - #51 x
INFO  13:59:49,535 - #44 [
INFO  13:59:49,535 - #45 ]
INFO  13:59:49,535 - #40 ,
INFO  13:59:49,536 - #51 y
INFO  13:59:49,536 - #44 [
INFO  13:59:49,536 - #45 ]
INFO  13:59:49,536 - #38 ;
INFO  13:59:49,537 - #47 }
INFO  13:59:49,539 - #7 const
INFO  13:59:49,540 - #51 int
INFO  13:59:49,540 - #51 pi
INFO  13:59:49,541 - #35 =
INFO  13:59:49,541 - #49 3
INFO  13:59:49,541 - #40 ,
INFO  13:59:49,541 - #51 e
INFO  13:59:49,542 - #35 =
INFO  13:59:49,543 - #49 2
INFO  13:59:49,543 - #38 ;
INFO  13:59:49,543 - #4 class
INFO  13:59:49,543 - #51 B
INFO  13:59:49,543 - #16 extends
INFO  13:59:49,544 - #51 A
INFO  13:59:49,544 - #46 {
INFO  13:59:49,544 - #51 int
INFO  13:59:49,544 - #51 i
INFO  13:59:49,544 - #38 ;
INFO  13:59:49,544 - #46 {
INFO  13:59:49,545 - #51 int
INFO  13:59:49,545 - #51 getValue
INFO  13:59:49,546 - #42 (
INFO  13:59:49,546 - #51 int
INFO  13:59:49,546 - #51 a
INFO  13:59:49,546 - #43 )
INFO  13:59:49,548 - #51 int
INFO  13:59:49,548 - #51 b
INFO  13:59:49,548 - #38 ;
INFO  13:59:49,549 - #51 bool
INFO  13:59:49,549 - #51 c
INFO  13:59:49,549 - #38 ;
INFO  13:59:49,549 - #46 {
INFO  13:59:49,549 - #14 return
INFO  13:59:49,551 - #51 this
INFO  13:59:49,551 - #41 .
INFO  13:59:49,552 - #51 i
INFO  13:59:49,552 - #22 +
INFO  13:59:49,555 - #51 this
INFO  13:59:49,557 - #41 .
INFO  13:59:49,557 - #51 x
INFO  13:59:49,557 - #44 [
INFO  13:59:49,558 - #49 0
INFO  13:59:49,558 - #45 ]
INFO  13:59:49,558 - #22 +
INFO  13:59:49,559 - #51 a
INFO  13:59:49,559 - #38 ;
INFO  13:59:49,560 - #47 }
INFO  13:59:49,560 - #15 void
INFO  13:59:49,560 - #51 m
INFO  13:59:49,561 - #42 (
INFO  13:59:49,561 - #43 )
INFO  13:59:49,563 - #46 {
INFO  13:59:49,563 - #47 }
INFO  13:59:49,563 - #47 }
INFO  13:59:49,563 - #47 }
INFO  13:59:49,563 - #4 class
INFO  13:59:49,563 - #51 C
INFO  13:59:49,563 - #16 extends
INFO  13:59:49,563 - #51 B
INFO  13:59:49,564 - #46 {
INFO  13:59:49,564 - #51 A
INFO  13:59:49,564 - #51 theA
INFO  13:59:49,564 - #38 ;
INFO  13:59:49,564 - #51 int
INFO  13:59:49,564 - #51 a
INFO  13:59:49,564 - #38 ;
INFO  13:59:49,564 - #47 }
INFO  13:59:49,564 - #46 {
INFO  13:59:49,565 - #15 void
INFO  13:59:49,565 - #51 main
INFO  13:59:49,565 - #42 (
INFO  13:59:49,565 - #43 )
INFO  13:59:49,565 - #51 A
INFO  13:59:49,565 - #51 a
INFO  13:59:49,565 - #38 ;
INFO  13:59:49,565 - #51 C
INFO  13:59:49,565 - #51 c
INFO  13:59:49,566 - #38 ;
INFO  13:59:49,566 - #51 int
INFO  13:59:49,566 - #51 i
INFO  13:59:49,566 - #38 ;
INFO  13:59:49,566 - #51 int
INFO  13:59:49,567 - #51 x
INFO  13:59:49,567 - #44 [
INFO  13:59:49,567 - #45 ]
INFO  13:59:49,567 - #38 ;
INFO  13:59:49,567 - #51 char
INFO  13:59:49,567 - #51 ch
INFO  13:59:49,567 - #38 ;
INFO  13:59:49,567 - #46 {
INFO  13:59:49,567 - #51 a
INFO  13:59:49,567 - #35 =
INFO  13:59:49,567 - #11 new
INFO  13:59:49,568 - #51 A
INFO  13:59:49,568 - #38 ;
INFO  13:59:49,569 - #51 a
INFO  13:59:49,570 - #41 .
INFO  13:59:49,570 - #51 x
INFO  13:59:49,570 - #35 =
INFO  13:59:49,570 - #11 new
INFO  13:59:49,570 - #51 int
INFO  13:59:49,570 - #44 [
INFO  13:59:49,570 - #49 5
INFO  13:59:49,570 - #45 ]
INFO  13:59:49,570 - #38 ;
INFO  13:59:49,571 - #51 a
INFO  13:59:49,571 - #41 .
INFO  13:59:49,572 - #51 y
INFO  13:59:49,572 - #35 =
INFO  13:59:49,572 - #11 new
INFO  13:59:49,572 - #51 int
INFO  13:59:49,572 - #44 [
INFO  13:59:49,572 - #49 5
INFO  13:59:49,572 - #45 ]
INFO  13:59:49,572 - #38 ;
INFO  13:59:49,572 - #51 c
INFO  13:59:49,572 - #35 =
INFO  13:59:49,572 - #11 new
INFO  13:59:49,572 - #51 C
INFO  13:59:49,572 - #38 ;
INFO  13:59:49,572 - #51 c
INFO  13:59:49,572 - #41 .
INFO  13:59:49,573 - #51 theA
INFO  13:59:49,573 - #35 =
INFO  13:59:49,573 - #51 a
INFO  13:59:49,573 - #38 ;
INFO  13:59:49,573 - #51 c
INFO  13:59:49,573 - #41 .
INFO  13:59:49,573 - #51 x
INFO  13:59:49,573 - #35 =
INFO  13:59:49,573 - #11 new
INFO  13:59:49,574 - #51 int
INFO  13:59:49,574 - #44 [
INFO  13:59:49,574 - #49 5
INFO  13:59:49,574 - #45 ]
INFO  13:59:49,574 - #38 ;
INFO  13:59:49,574 - #51 x
INFO  13:59:49,574 - #35 =
INFO  13:59:49,574 - #11 new
INFO  13:59:49,574 - #51 int
INFO  13:59:49,574 - #44 [
INFO  13:59:49,575 - #49 3
INFO  13:59:49,575 - #45 ]
INFO  13:59:49,575 - #38 ;
INFO  13:59:49,575 - #13 read
INFO  13:59:49,575 - #42 (
INFO  13:59:49,575 - #51 c
INFO  13:59:49,575 - #41 .
INFO  13:59:49,575 - #51 i
INFO  13:59:49,575 - #43 )
INFO  13:59:49,576 - #38 ;
INFO  13:59:49,576 - #51 i
INFO  13:59:49,576 - #35 =
INFO  13:59:49,576 - #49 0
INFO  13:59:49,576 - #38 ;
INFO  13:59:49,576 - #9 do
INFO  13:59:49,576 - #46 {
INFO  13:59:49,576 - #13 read
INFO  13:59:49,576 - #42 (
INFO  13:59:49,576 - #51 c
INFO  13:59:49,577 - #41 .
INFO  13:59:49,577 - #51 x
INFO  13:59:49,578 - #44 [
INFO  13:59:49,578 - #51 i
INFO  13:59:49,578 - #45 ]
INFO  13:59:49,578 - #43 )
INFO  13:59:49,578 - #38 ;
INFO  13:59:49,578 - #13 read
INFO  13:59:49,578 - #42 (
INFO  13:59:49,578 - #51 c
INFO  13:59:49,578 - #41 .
INFO  13:59:49,578 - #51 theA
INFO  13:59:49,578 - #41 .
INFO  13:59:49,578 - #51 x
INFO  13:59:49,578 - #44 [
INFO  13:59:49,578 - #51 i
INFO  13:59:49,578 - #45 ]
INFO  13:59:49,578 - #43 )
INFO  13:59:49,578 - #38 ;
INFO  13:59:49,578 - #51 i
INFO  13:59:49,578 - #36 ++
INFO  13:59:49,579 - #38 ;
INFO  13:59:49,579 - #47 }
INFO  13:59:49,580 - #10 while
INFO  13:59:49,581 - #42 (
INFO  13:59:49,581 - #51 i
INFO  13:59:49,581 - #31 <
INFO  13:59:49,581 - #49 5
INFO  13:59:49,582 - #43 )
INFO  13:59:49,586 - #38 ;
INFO  13:59:49,586 - #12 print
INFO  13:59:49,586 - #42 (
INFO  13:59:49,586 - #51 c
INFO  13:59:49,586 - #42 (
INFO  13:59:49,586 - #51 c
INFO  13:59:49,586 - #43 )
INFO  13:59:49,586 - #43 )
ERROR 13:59:49,587 - 
Sintaksna greska na liniji 39
ERROR 13:59:49,587 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 39
