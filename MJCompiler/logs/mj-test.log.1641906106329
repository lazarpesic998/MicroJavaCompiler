INFO  14:00:16,007 - Compiling source file: C:\Users\Lazar\Desktop\PP1_projekat\workspace\MJCompiler\test\program.mj
INFO  14:00:16,084 - #2 program
INFO  14:00:16,084 - #51 Program
INFO  14:00:16,084 - #4 class
INFO  14:00:16,085 - #51 A
INFO  14:00:16,085 - #46 {
INFO  14:00:16,086 - #51 int
INFO  14:00:16,087 - #51 x
INFO  14:00:16,089 - #44 [
INFO  14:00:16,089 - #45 ]
INFO  14:00:16,089 - #40 ,
INFO  14:00:16,090 - #51 y
INFO  14:00:16,091 - #44 [
INFO  14:00:16,091 - #45 ]
INFO  14:00:16,091 - #38 ;
INFO  14:00:16,091 - #47 }
INFO  14:00:16,094 - #7 const
INFO  14:00:16,095 - #51 int
INFO  14:00:16,095 - #51 pi
INFO  14:00:16,096 - #35 =
INFO  14:00:16,096 - #49 3
INFO  14:00:16,096 - #40 ,
INFO  14:00:16,097 - #51 e
INFO  14:00:16,097 - #35 =
INFO  14:00:16,097 - #49 2
INFO  14:00:16,098 - #38 ;
INFO  14:00:16,098 - #4 class
INFO  14:00:16,099 - #51 B
INFO  14:00:16,099 - #16 extends
INFO  14:00:16,099 - #51 A
INFO  14:00:16,100 - #46 {
INFO  14:00:16,100 - #51 int
INFO  14:00:16,100 - #51 i
INFO  14:00:16,100 - #38 ;
INFO  14:00:16,100 - #46 {
INFO  14:00:16,100 - #51 int
INFO  14:00:16,101 - #51 getValue
INFO  14:00:16,101 - #42 (
INFO  14:00:16,101 - #51 int
INFO  14:00:16,101 - #51 a
INFO  14:00:16,101 - #43 )
INFO  14:00:16,103 - #51 int
INFO  14:00:16,103 - #51 b
INFO  14:00:16,103 - #38 ;
INFO  14:00:16,104 - #51 bool
INFO  14:00:16,104 - #51 c
INFO  14:00:16,104 - #38 ;
INFO  14:00:16,104 - #46 {
INFO  14:00:16,104 - #14 return
INFO  14:00:16,105 - #51 this
INFO  14:00:16,106 - #41 .
INFO  14:00:16,107 - #51 i
INFO  14:00:16,107 - #22 +
INFO  14:00:16,111 - #51 this
INFO  14:00:16,113 - #41 .
INFO  14:00:16,113 - #51 x
INFO  14:00:16,113 - #44 [
INFO  14:00:16,113 - #49 0
INFO  14:00:16,114 - #45 ]
INFO  14:00:16,115 - #22 +
INFO  14:00:16,116 - #51 a
INFO  14:00:16,116 - #38 ;
INFO  14:00:16,117 - #47 }
INFO  14:00:16,117 - #15 void
INFO  14:00:16,118 - #51 m
INFO  14:00:16,119 - #42 (
INFO  14:00:16,119 - #43 )
INFO  14:00:16,120 - #46 {
INFO  14:00:16,120 - #47 }
INFO  14:00:16,120 - #47 }
INFO  14:00:16,120 - #47 }
INFO  14:00:16,121 - #4 class
INFO  14:00:16,121 - #51 C
INFO  14:00:16,121 - #16 extends
INFO  14:00:16,121 - #51 B
INFO  14:00:16,121 - #46 {
INFO  14:00:16,121 - #51 A
INFO  14:00:16,121 - #51 theA
INFO  14:00:16,121 - #38 ;
INFO  14:00:16,122 - #51 int
INFO  14:00:16,122 - #51 a
INFO  14:00:16,122 - #38 ;
INFO  14:00:16,122 - #47 }
INFO  14:00:16,122 - #46 {
INFO  14:00:16,122 - #15 void
INFO  14:00:16,122 - #51 main
INFO  14:00:16,123 - #42 (
INFO  14:00:16,123 - #43 )
INFO  14:00:16,123 - #51 A
INFO  14:00:16,123 - #51 a
INFO  14:00:16,123 - #38 ;
INFO  14:00:16,123 - #51 C
INFO  14:00:16,123 - #51 c
INFO  14:00:16,123 - #38 ;
INFO  14:00:16,123 - #51 int
INFO  14:00:16,123 - #51 i
INFO  14:00:16,123 - #38 ;
INFO  14:00:16,124 - #51 int
INFO  14:00:16,124 - #51 x
INFO  14:00:16,124 - #44 [
INFO  14:00:16,124 - #45 ]
INFO  14:00:16,124 - #38 ;
INFO  14:00:16,124 - #51 char
INFO  14:00:16,124 - #51 ch
INFO  14:00:16,124 - #38 ;
INFO  14:00:16,124 - #46 {
INFO  14:00:16,124 - #51 a
INFO  14:00:16,125 - #35 =
INFO  14:00:16,125 - #11 new
INFO  14:00:16,126 - #51 A
INFO  14:00:16,126 - #38 ;
INFO  14:00:16,127 - #51 a
INFO  14:00:16,128 - #41 .
INFO  14:00:16,128 - #51 x
INFO  14:00:16,128 - #35 =
INFO  14:00:16,128 - #11 new
INFO  14:00:16,128 - #51 int
INFO  14:00:16,128 - #44 [
INFO  14:00:16,128 - #49 5
INFO  14:00:16,128 - #45 ]
INFO  14:00:16,128 - #38 ;
INFO  14:00:16,128 - #51 a
INFO  14:00:16,128 - #41 .
INFO  14:00:16,129 - #51 y
INFO  14:00:16,129 - #35 =
INFO  14:00:16,129 - #11 new
INFO  14:00:16,129 - #51 int
INFO  14:00:16,129 - #44 [
INFO  14:00:16,129 - #49 5
INFO  14:00:16,129 - #45 ]
INFO  14:00:16,129 - #38 ;
INFO  14:00:16,129 - #51 c
INFO  14:00:16,129 - #35 =
INFO  14:00:16,130 - #11 new
INFO  14:00:16,130 - #51 C
INFO  14:00:16,130 - #38 ;
INFO  14:00:16,130 - #51 c
INFO  14:00:16,130 - #41 .
INFO  14:00:16,130 - #51 theA
INFO  14:00:16,130 - #35 =
INFO  14:00:16,130 - #51 a
INFO  14:00:16,130 - #38 ;
INFO  14:00:16,131 - #51 c
INFO  14:00:16,131 - #41 .
INFO  14:00:16,131 - #51 x
INFO  14:00:16,131 - #35 =
INFO  14:00:16,131 - #11 new
INFO  14:00:16,131 - #51 int
INFO  14:00:16,132 - #44 [
INFO  14:00:16,132 - #49 5
INFO  14:00:16,132 - #45 ]
INFO  14:00:16,132 - #38 ;
INFO  14:00:16,132 - #51 x
INFO  14:00:16,132 - #35 =
INFO  14:00:16,132 - #11 new
INFO  14:00:16,132 - #51 int
INFO  14:00:16,132 - #44 [
INFO  14:00:16,132 - #49 3
INFO  14:00:16,132 - #45 ]
INFO  14:00:16,132 - #38 ;
INFO  14:00:16,132 - #13 read
INFO  14:00:16,133 - #42 (
INFO  14:00:16,133 - #51 c
INFO  14:00:16,133 - #41 .
INFO  14:00:16,133 - #51 i
INFO  14:00:16,133 - #43 )
INFO  14:00:16,133 - #38 ;
INFO  14:00:16,133 - #51 i
INFO  14:00:16,133 - #35 =
INFO  14:00:16,133 - #49 0
INFO  14:00:16,134 - #38 ;
INFO  14:00:16,134 - #9 do
INFO  14:00:16,134 - #46 {
INFO  14:00:16,134 - #13 read
INFO  14:00:16,134 - #42 (
INFO  14:00:16,134 - #51 c
INFO  14:00:16,134 - #41 .
INFO  14:00:16,134 - #51 x
INFO  14:00:16,134 - #44 [
INFO  14:00:16,134 - #51 i
INFO  14:00:16,134 - #45 ]
INFO  14:00:16,135 - #43 )
INFO  14:00:16,135 - #38 ;
INFO  14:00:16,135 - #13 read
INFO  14:00:16,135 - #42 (
INFO  14:00:16,135 - #51 c
INFO  14:00:16,135 - #41 .
INFO  14:00:16,135 - #51 theA
INFO  14:00:16,135 - #41 .
INFO  14:00:16,135 - #51 x
INFO  14:00:16,135 - #44 [
INFO  14:00:16,136 - #51 i
INFO  14:00:16,136 - #45 ]
INFO  14:00:16,136 - #43 )
INFO  14:00:16,136 - #38 ;
INFO  14:00:16,136 - #51 i
INFO  14:00:16,136 - #36 ++
INFO  14:00:16,136 - #38 ;
INFO  14:00:16,137 - #47 }
INFO  14:00:16,137 - #10 while
INFO  14:00:16,138 - #42 (
INFO  14:00:16,138 - #51 i
INFO  14:00:16,138 - #31 <
INFO  14:00:16,138 - #49 5
INFO  14:00:16,140 - #43 )
INFO  14:00:16,145 - #38 ;
INFO  14:00:16,145 - #12 print
INFO  14:00:16,145 - #42 (
INFO  14:00:16,145 - #51 c
INFO  14:00:16,145 - #43 )
ERROR 14:00:16,146 - 
Sintaksna greska na liniji 39
ERROR 14:00:16,146 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 39
