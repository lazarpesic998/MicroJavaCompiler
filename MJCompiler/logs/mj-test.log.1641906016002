INFO  14:00:03,656 - Compiling source file: C:\Users\Lazar\Desktop\PP1_projekat\workspace\MJCompiler\test\program.mj
INFO  14:00:03,707 - #2 program
INFO  14:00:03,707 - #51 Program
INFO  14:00:03,707 - #4 class
INFO  14:00:03,707 - #51 A
INFO  14:00:03,707 - #46 {
INFO  14:00:03,709 - #51 int
INFO  14:00:03,709 - #51 x
INFO  14:00:03,711 - #44 [
INFO  14:00:03,711 - #45 ]
INFO  14:00:03,711 - #40 ,
INFO  14:00:03,711 - #51 y
INFO  14:00:03,711 - #44 [
INFO  14:00:03,711 - #45 ]
INFO  14:00:03,712 - #38 ;
INFO  14:00:03,712 - #47 }
INFO  14:00:03,713 - #7 const
INFO  14:00:03,714 - #51 int
INFO  14:00:03,714 - #51 pi
INFO  14:00:03,714 - #35 =
INFO  14:00:03,714 - #49 3
INFO  14:00:03,714 - #40 ,
INFO  14:00:03,716 - #51 e
INFO  14:00:03,716 - #35 =
INFO  14:00:03,716 - #49 2
INFO  14:00:03,716 - #38 ;
INFO  14:00:03,716 - #4 class
INFO  14:00:03,717 - #51 B
INFO  14:00:03,717 - #16 extends
INFO  14:00:03,717 - #51 A
INFO  14:00:03,718 - #46 {
INFO  14:00:03,718 - #51 int
INFO  14:00:03,718 - #51 i
INFO  14:00:03,718 - #38 ;
INFO  14:00:03,718 - #46 {
INFO  14:00:03,718 - #51 int
INFO  14:00:03,719 - #51 getValue
INFO  14:00:03,720 - #42 (
INFO  14:00:03,720 - #51 int
INFO  14:00:03,720 - #51 a
INFO  14:00:03,720 - #43 )
INFO  14:00:03,721 - #51 int
INFO  14:00:03,721 - #51 b
INFO  14:00:03,722 - #38 ;
INFO  14:00:03,722 - #51 bool
INFO  14:00:03,722 - #51 c
INFO  14:00:03,722 - #38 ;
INFO  14:00:03,722 - #46 {
INFO  14:00:03,722 - #14 return
INFO  14:00:03,722 - #51 this
INFO  14:00:03,723 - #41 .
INFO  14:00:03,725 - #51 i
INFO  14:00:03,725 - #22 +
INFO  14:00:03,728 - #51 this
INFO  14:00:03,729 - #41 .
INFO  14:00:03,729 - #51 x
INFO  14:00:03,729 - #44 [
INFO  14:00:03,729 - #49 0
INFO  14:00:03,729 - #45 ]
INFO  14:00:03,729 - #22 +
INFO  14:00:03,731 - #51 a
INFO  14:00:03,731 - #38 ;
INFO  14:00:03,731 - #47 }
INFO  14:00:03,732 - #15 void
INFO  14:00:03,732 - #51 m
INFO  14:00:03,732 - #42 (
INFO  14:00:03,732 - #43 )
INFO  14:00:03,733 - #46 {
INFO  14:00:03,734 - #47 }
INFO  14:00:03,734 - #47 }
INFO  14:00:03,734 - #47 }
INFO  14:00:03,735 - #4 class
INFO  14:00:03,735 - #51 C
INFO  14:00:03,735 - #16 extends
INFO  14:00:03,735 - #51 B
INFO  14:00:03,735 - #46 {
INFO  14:00:03,735 - #51 A
INFO  14:00:03,735 - #51 theA
INFO  14:00:03,735 - #38 ;
INFO  14:00:03,735 - #51 int
INFO  14:00:03,735 - #51 a
INFO  14:00:03,736 - #38 ;
INFO  14:00:03,736 - #47 }
INFO  14:00:03,736 - #46 {
INFO  14:00:03,736 - #15 void
INFO  14:00:03,736 - #51 main
INFO  14:00:03,736 - #42 (
INFO  14:00:03,736 - #43 )
INFO  14:00:03,736 - #51 A
INFO  14:00:03,736 - #51 a
INFO  14:00:03,736 - #38 ;
INFO  14:00:03,736 - #51 C
INFO  14:00:03,736 - #51 c
INFO  14:00:03,737 - #38 ;
INFO  14:00:03,737 - #51 int
INFO  14:00:03,737 - #51 i
INFO  14:00:03,737 - #38 ;
INFO  14:00:03,737 - #51 int
INFO  14:00:03,737 - #51 x
INFO  14:00:03,737 - #44 [
INFO  14:00:03,737 - #45 ]
INFO  14:00:03,737 - #38 ;
INFO  14:00:03,737 - #51 char
INFO  14:00:03,737 - #51 ch
INFO  14:00:03,737 - #38 ;
INFO  14:00:03,737 - #46 {
INFO  14:00:03,737 - #51 a
INFO  14:00:03,737 - #35 =
INFO  14:00:03,737 - #11 new
INFO  14:00:03,738 - #51 A
INFO  14:00:03,738 - #38 ;
INFO  14:00:03,740 - #51 a
INFO  14:00:03,740 - #41 .
INFO  14:00:03,741 - #51 x
INFO  14:00:03,741 - #35 =
INFO  14:00:03,741 - #11 new
INFO  14:00:03,741 - #51 int
INFO  14:00:03,741 - #44 [
INFO  14:00:03,741 - #49 5
INFO  14:00:03,741 - #45 ]
INFO  14:00:03,741 - #38 ;
INFO  14:00:03,741 - #51 a
INFO  14:00:03,741 - #41 .
INFO  14:00:03,741 - #51 y
INFO  14:00:03,741 - #35 =
INFO  14:00:03,741 - #11 new
INFO  14:00:03,741 - #51 int
INFO  14:00:03,742 - #44 [
INFO  14:00:03,742 - #49 5
INFO  14:00:03,742 - #45 ]
INFO  14:00:03,742 - #38 ;
INFO  14:00:03,743 - #51 c
INFO  14:00:03,743 - #35 =
INFO  14:00:03,743 - #11 new
INFO  14:00:03,743 - #51 C
INFO  14:00:03,743 - #38 ;
INFO  14:00:03,743 - #51 c
INFO  14:00:03,743 - #41 .
INFO  14:00:03,743 - #51 theA
INFO  14:00:03,743 - #35 =
INFO  14:00:03,744 - #51 a
INFO  14:00:03,744 - #38 ;
INFO  14:00:03,744 - #51 c
INFO  14:00:03,744 - #41 .
INFO  14:00:03,744 - #51 x
INFO  14:00:03,744 - #35 =
INFO  14:00:03,744 - #11 new
INFO  14:00:03,745 - #51 int
INFO  14:00:03,745 - #44 [
INFO  14:00:03,745 - #49 5
INFO  14:00:03,745 - #45 ]
INFO  14:00:03,745 - #38 ;
INFO  14:00:03,745 - #51 x
INFO  14:00:03,745 - #35 =
INFO  14:00:03,745 - #11 new
INFO  14:00:03,745 - #51 int
INFO  14:00:03,745 - #44 [
INFO  14:00:03,745 - #49 3
INFO  14:00:03,745 - #45 ]
INFO  14:00:03,746 - #38 ;
INFO  14:00:03,747 - #13 read
INFO  14:00:03,747 - #42 (
INFO  14:00:03,747 - #51 c
INFO  14:00:03,747 - #41 .
INFO  14:00:03,747 - #51 i
INFO  14:00:03,747 - #43 )
INFO  14:00:03,747 - #38 ;
INFO  14:00:03,747 - #51 i
INFO  14:00:03,747 - #35 =
INFO  14:00:03,747 - #49 0
INFO  14:00:03,747 - #38 ;
INFO  14:00:03,747 - #9 do
INFO  14:00:03,747 - #46 {
INFO  14:00:03,747 - #13 read
INFO  14:00:03,747 - #42 (
INFO  14:00:03,747 - #51 c
INFO  14:00:03,748 - #41 .
INFO  14:00:03,748 - #51 x
INFO  14:00:03,748 - #44 [
INFO  14:00:03,748 - #51 i
INFO  14:00:03,748 - #45 ]
INFO  14:00:03,748 - #43 )
INFO  14:00:03,748 - #38 ;
INFO  14:00:03,748 - #13 read
INFO  14:00:03,748 - #42 (
INFO  14:00:03,748 - #51 c
INFO  14:00:03,748 - #41 .
INFO  14:00:03,748 - #51 theA
INFO  14:00:03,748 - #41 .
INFO  14:00:03,748 - #51 x
INFO  14:00:03,749 - #44 [
INFO  14:00:03,749 - #51 i
INFO  14:00:03,749 - #45 ]
INFO  14:00:03,749 - #43 )
INFO  14:00:03,749 - #38 ;
INFO  14:00:03,749 - #51 i
INFO  14:00:03,749 - #36 ++
INFO  14:00:03,749 - #38 ;
INFO  14:00:03,750 - #47 }
INFO  14:00:03,750 - #10 while
INFO  14:00:03,751 - #42 (
INFO  14:00:03,751 - #51 i
INFO  14:00:03,751 - #31 <
INFO  14:00:03,751 - #49 5
INFO  14:00:03,753 - #43 )
INFO  14:00:03,756 - #38 ;
INFO  14:00:03,756 - #12 print
INFO  14:00:03,756 - #42 (
INFO  14:00:03,756 - #51 c
INFO  14:00:03,756 - #42 (
INFO  14:00:03,757 - #43 )
INFO  14:00:03,765 - #43 )
ERROR 14:00:03,765 - 
Sintaksna greska na liniji 39
ERROR 14:00:03,765 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 39
