// generated with ast extension for cup
// version 0.8
// 5/1/2023 1:44:11


package rs.ac.bg.etf.pp1.ast;

public interface Visitor { 

    public void visit(ExprOptional ExprOptional);
    public void visit(Mulop Mulop);
    public void visit(ConstructorDecl ConstructorDecl);
    public void visit(Relop Relop);
    public void visit(ParameterList ParameterList);
    public void visit(ConstructorDeclarations ConstructorDeclarations);
    public void visit(Variable Variable);
    public void visit(StatementList StatementList);
    public void visit(Addop Addop);
    public void visit(IdentValuePair IdentValuePair);
    public void visit(VariableList VariableList);
    public void visit(ConditionIf ConditionIf);
    public void visit(Factor Factor);
    public void visit(CondTerm CondTerm);
    public void visit(CommaNumConstOptional CommaNumConstOptional);
    public void visit(Designator Designator);
    public void visit(Term Term);
    public void visit(Condition Condition);
    public void visit(Statements Statements);
    public void visit(ConstDeclList ConstDeclList);
    public void visit(AssignopExpr AssignopExpr);
    public void visit(ActParsList ActParsList);
    public void visit(DesignatorOptional DesignatorOptional);
    public void visit(DesignatorOperations DesignatorOperations);
    public void visit(FormVariable FormVariable);
    public void visit(FunctionCallName FunctionCallName);
    public void visit(FormalParsOptional FormalParsOptional);
    public void visit(Declarations Declarations);
    public void visit(Expr Expr);
    public void visit(ActPars ActPars);
    public void visit(DesignatorOptionalList DesignatorOptionalList);
    public void visit(VarDeclarationsList VarDeclarationsList);
    public void visit(MethodTypeName MethodTypeName);
    public void visit(DesignatorStatement DesignatorStatement);
    public void visit(Extension Extension);
    public void visit(Statement Statement);
    public void visit(MethDeclarationsOptional MethDeclarationsOptional);
    public void visit(LabelStm LabelStm);
    public void visit(ConstDecl ConstDecl);
    public void visit(CondFact CondFact);
    public void visit(MethDeclarations MethDeclarations);
    public void visit(MethodDeclList MethodDeclList);
    public void visit(ClassMethodsDeclarations ClassMethodsDeclarations);
    public void visit(SingleStatement SingleStatement);
    public void visit(FormPars FormPars);
    public void visit(Minus Minus);
    public void visit(Plus Plus);
    public void visit(Mod Mod);
    public void visit(Div Div);
    public void visit(Mul Mul);
    public void visit(Lte Lte);
    public void visit(Lt Lt);
    public void visit(Gte Gte);
    public void visit(Gt Gt);
    public void visit(Neq Neq);
    public void visit(Eq Eq);
    public void visit(Assignop Assignop);
    public void visit(FunctionCall FunctionCall);
    public void visit(ActParsListDerived1 ActParsListDerived1);
    public void visit(ActParsLst ActParsLst);
    public void visit(ActParam ActParam);
    public void visit(ActParams ActParams);
    public void visit(ExprFactor ExprFactor);
    public void visit(NewFactorArray NewFactorArray);
    public void visit(NewFactor NewFactor);
    public void visit(ConstBoolFactor ConstBoolFactor);
    public void visit(ConstCharFactor ConstCharFactor);
    public void visit(ConstNumFactor ConstNumFactor);
    public void visit(FactorFunctionCall FactorFunctionCall);
    public void visit(DesignatorFactor DesignatorFactor);
    public void visit(TermFactorList TermFactorList);
    public void visit(TermFactor TermFactor);
    public void visit(NoExprOption NoExprOption);
    public void visit(ExprOption ExprOption);
    public void visit(ExprAddopList ExprAddopList);
    public void visit(PlusExpr PlusExpr);
    public void visit(MinusExpr MinusExpr);
    public void visit(AssignopExprError AssignopExprError);
    public void visit(AssignopExpresion AssignopExpresion);
    public void visit(NoDesignatorOption NoDesignatorOption);
    public void visit(DesignatorOption DesignatorOption);
    public void visit(DesignatorArrayStart DesignatorArrayStart);
    public void visit(DesignatorArray DesignatorArray);
    public void visit(DesignatorClassAndField DesignatorClassAndField);
    public void visit(DesignatorIdent DesignatorIdent);
    public void visit(NoParameterList NoParameterList);
    public void visit(ParameterListComma ParameterListComma);
    public void visit(ParameterListDesignator ParameterListDesignator);
    public void visit(DesignatorMagic DesignatorMagic);
    public void visit(DesignatorDec DesignatorDec);
    public void visit(DesignatorStatementInc DesignatorStatementInc);
    public void visit(DesignatorFunctionCall DesignatorFunctionCall);
    public void visit(DesignatorStatementAssign DesignatorStatementAssign);
    public void visit(CondFactTwoExpr CondFactTwoExpr);
    public void visit(CondFactExpr CondFactExpr);
    public void visit(Andop Andop);
    public void visit(Orop Orop);
    public void visit(CondTermList CondTermList);
    public void visit(CondTermFact CondTermFact);
    public void visit(ConditionList ConditionList);
    public void visit(ConditionTerm ConditionTerm);
    public void visit(ConditionError ConditionError);
    public void visit(CondIf CondIf);
    public void visit(Label Label);
    public void visit(CommaNumConstOptionalDerived1 CommaNumConstOptionalDerived1);
    public void visit(CommaNumConstOption CommaNumConstOption);
    public void visit(ForeachIdent ForeachIdent);
    public void visit(ForeachStart ForeachStart);
    public void visit(WhileStart WhileStart);
    public void visit(ElseStart ElseStart);
    public void visit(IfStart IfStart);
    public void visit(ForeachStatement ForeachStatement);
    public void visit(PrintStatement PrintStatement);
    public void visit(ReadStatement ReadStatement);
    public void visit(ReturnStatement ReturnStatement);
    public void visit(Continue Continue);
    public void visit(Break Break);
    public void visit(WhileStatement WhileStatement);
    public void visit(ElseStatement ElseStatement);
    public void visit(IfStatement IfStatement);
    public void visit(DesignatorStm DesignatorStm);
    public void visit(StatementsDerived1 StatementsDerived1);
    public void visit(Stmts Stmts);
    public void visit(Stmt Stmt);
    public void visit(StmtLabel StmtLabel);
    public void visit(StatementListDerived1 StatementListDerived1);
    public void visit(StatementLst StatementLst);
    public void visit(FormVarError FormVarError);
    public void visit(FormVar FormVar);
    public void visit(FormVarArray FormVarArray);
    public void visit(FormParsOne FormParsOne);
    public void visit(FormParsList FormParsList);
    public void visit(FormalParsOptionalDerived1 FormalParsOptionalDerived1);
    public void visit(FormalParsOpt FormalParsOpt);
    public void visit(MethodReturnVoid MethodReturnVoid);
    public void visit(MethodReturnType MethodReturnType);
    public void visit(MethodDecl MethodDecl);
    public void visit(MethodDeclListDerived1 MethodDeclListDerived1);
    public void visit(MethodDeclLst MethodDeclLst);
    public void visit(ConstructorDeclDerived1 ConstructorDeclDerived1);
    public void visit(MethDeclarationsOptionalDerived1 MethDeclarationsOptionalDerived1);
    public void visit(MethDeclarationsOption MethDeclarationsOption);
    public void visit(ConstructorMethDeclr ConstructorMethDeclr);
    public void visit(ExtensionDerived1 ExtensionDerived1);
    public void visit(Exten Exten);
    public void visit(ClassDeclarations ClassDeclarations);
    public void visit(Type Type);
    public void visit(VarDeclarationsListDerived1 VarDeclarationsListDerived1);
    public void visit(VarDeclarationsLst VarDeclarationsLst);
    public void visit(VariableError VariableError);
    public void visit(Var Var);
    public void visit(ArrayVar ArrayVar);
    public void visit(VariableListDerived1 VariableListDerived1);
    public void visit(VariableLst VariableLst);
    public void visit(VarDeclarations VarDeclarations);
    public void visit(CharConst CharConst);
    public void visit(BoolConst BoolConst);
    public void visit(NumConst NumConst);
    public void visit(ConstDeclListDerived1 ConstDeclListDerived1);
    public void visit(ConstDeclLst ConstDeclLst);
    public void visit(ConstDeclarations ConstDeclarations);
    public void visit(DeclarationsDerived4 DeclarationsDerived4);
    public void visit(DeclarationsDerived3 DeclarationsDerived3);
    public void visit(DeclarationsDerived2 DeclarationsDerived2);
    public void visit(DeclarationsDerived1 DeclarationsDerived1);
    public void visit(ProgName ProgName);
    public void visit(Program Program);

}
